name: "Build and tag Dev"
on:
  push:
    branches:
      - "main"
env:
  ENV: "dev"
  VERSION: "v0.2.0-build.${{github.run_number}}.${{ github.run_attempt }}"  # TODO get version from releases (include drafts)
  CARGO_TERM_COLOR: always
  PROJECT_ID: ent-getstarted-sbx
  DOCKER_URL: europe-west1-docker.pkg.dev
  WORKLOAD_IDENTITY_PROVIDER: "projects/475080371789/locations/global/workloadIdentityPools/poc-gh-actions-pool/providers/poc-gh-actions-provider"
  SERVICE_ACCOUNT: "github-actions-poc@ent-getstarted-sbx.iam.gserviceaccount.com"
  IMAGE_PATH: "ent-getstarted-sbx/getting-started-github-actions/hello-github-actions"

jobs:
  docker-build:
    name: "Build Docker Image"
    permissions:
      contents: 'write'  # for google auth
      id-token: 'write' # for google auth
      actions: none
      checks: none
      deployments: none
      issues: none
      discussions: none
      packages: none
      pages: none
      pull-requests: none
      repository-projects: none
      security-events: none
      statuses: none
    runs-on: "ubuntu-latest"
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            auth.docker.io:443
            dl.google.com:443
            europe-west1-docker.pkg.dev:443
            github.com:443
            iamcredentials.googleapis.com:443
            index.crates.io:443
            production.cloudflare.docker.com:443
            raw.githubusercontent.com:443
            registry-1.docker.io:443
            static.rust-lang.org:443
            sts.googleapis.com:443
            crates.io:443
      - name: "Git checkout"
        uses: "actions/checkout@v4"
        with:
          fetch-depth: 0
          show-progress: false
      - uses: dtolnay/rust-toolchain@stable
      - name: Install musl target
        run: rustup target add x86_64-unknown-linux-musl
      - name: Cache
        uses: Swatinem/rust-cache@v2
      - run: rustup target add x86_64-unknown-linux-musl
      - run: cargo build --all --release --target=x86_64-unknown-linux-musl
      - name: Prepare Binary
        run: |
          # reduce size
          strip target/x86_64-unknown-linux-musl/release/hello-github-actions
          # move and rename
          mv target/x86_64-unknown-linux-musl/release/hello-github-actions target/release/hello-github-actions-musl
          # make executable
          chmod +x target/release/hello-github-actions-musl
      - name: "Authenticate with Google Cloud"
        id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{env.WORKLOAD_IDENTITY_PROVIDER}}
          service_account: ${{env.SERVICE_ACCOUNT}}
      # SDK
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
      # Docker config
      - name: 'Configure Docker with gcloud auth'
        run: gcloud --quiet auth configure-docker ${{env.DOCKER_URL}}
      # Docker build
      - name: "Docker Build"
        run: |-
          docker build \
            --tag "${{env.DOCKER_URL}}/${{env.IMAGE_PATH}}:latest" \
            --tag "${{env.DOCKER_URL}}/${{env.IMAGE_PATH}}:${{github.sha}}" \
            --tag "${{env.DOCKER_URL}}/${{env.IMAGE_PATH}}:${{env.VERSION}}" \
            --tag "${{env.DOCKER_URL}}/${{env.IMAGE_PATH}}:${{env.ENV}}_${{env.VERSION}}" \
            --tag "${{env.DOCKER_URL}}/${{env.IMAGE_PATH}}:${{env.ENV}}_latest" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .
      # Docker publish
      - name: Docker Publish
        run: |-
          docker push -a "${{env.DOCKER_URL}}/${{env.IMAGE_PATH}}"

  update-image-tag:
    name: "Update Image & Tag"
    permissions:
      contents: 'write'
      id-token: 'none'
      actions: none
      checks: none
      deployments: none
      issues: none
      discussions: none
      packages: none
      pages: none
      pull-requests: none
      repository-projects: none
      security-events: none
      statuses: none
    needs: docker-build
    runs-on: "ubuntu-latest"
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            objects.githubusercontent.com:443
      - name: "Git checkout"
        uses: "actions/checkout@v4"
        with:
          fetch-depth: 0
          show-progress: false
      - uses: yokawasa/action-setup-kube-tools@v0.9.2
        with:
          setup-tools: |
            kustomize
          kustomize: '5.2.1'
      - name: Get previous tag
        id: previousTag
        run: |
          #name=$(git --no-pager tag --sort=creatordate --merged ${{ github.ref_name }} | tail -2 | head -1) #enable --merged when doing pr-s
          name=$(git --no-pager tag --sort=creatordate | tail -2 | head -1)
          echo "previousTag: $name"
          echo "previousTag=$name" >> $GITHUB_OUTPUT
      - name: Update CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          fromTag: ${{ github.ref_name }}
          toTag: ${{ steps.previousTag.outputs.previousTag }}
          writeToFile: true
          reverseOrder: true
          excludeTypes: build,docs,other,style,chore(deps),ci,refactor,test
      - name: Commit CHANGELOG.md
        if: ${{ !env.ACT }}
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: main
          commit_message: 'docs: update CHANGELOG.md for ${{ github.ref_name }} [skip ci]'
          file_pattern: CHANGELOG.md
      - name: "Update Deployment Image Tag"
        working-directory: ".argo/hestekur/overlays/${{ env.ENV }}"
        run: |
          kustomize edit set image app-image=${{env.DOCKER_URL}}/${{env.IMAGE_PATH}}:${{ env.VERSION }}
      # - name: "Push Updated Image Tag ${{ env.ENV }}"
      #   id: git-push-changes
      #   working-directory: ".argo/hestekur/overlays/${{ env.ENV }}"
      #   run: |
      #     if [[ $(git status --porcelain .) ]]; then
      #       git add .
      #       git config --global user.name "@github-actions-bot"
      #       git config --global user.email "github-actions-bot@users.noreply.github.com"
      #       git commit -m "feat: Update deployment image tag in ${{ env.ENV }} to ${{ env.VERSION }} [skip ci]"
      #       git tag -a "${{ env.VERSION }}" -m "Update deployment image tag in ${{ env.ENV }} to ${{ env.VERSION }}"
      #       git push --tags
      #       echo "pushed=true" >> $GITHUB_OUTPUT
      #     else
      #       echo "pushed=false" >> $GITHUB_OUTPUT
      #       echo "NB: No image change, will not create PR"
      #     fi
      - name: Commit kustomization and tag version
        if: ${{ !env.ACT }}
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: main
          commit_message: "ci: Update deployment image tag in ${{ env.ENV }} to ${{ env.VERSION }} [skip ci]"
          tagging_message: "${{ env.VERSION }}"
          file_pattern: .argo/*/overlays/${{env.ENV}}/kustomization.yaml
