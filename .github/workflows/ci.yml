name: "Build and tag Dev"
on:
  push:
    branches:
      - "main"
    tags: # skip loop when tag is pushed
      - "!v*.*.*-*"
  pull_request:
    branches:
     - "main"

env:
    VERSION: "v0.2.0-build.${{github.run_number}}.${{ github.run_attempt }}"  # TODO get version from releases (include drafts)
    CARGO_TERM_COLOR: always
    PROJECT_ID: ent-getstarted-sbx
    DOCKER_URL: europe-west1-docker.pkg.dev
    WORKLOAD_IDENTITY_PROVIDER: "projects/475080371789/locations/global/workloadIdentityPools/poc-gh-actions-pool/providers/poc-gh-actions-provider"
    SERVICE_ACCOUNT: "github-actions-poc@ent-getstarted-sbx.iam.gserviceaccount.com"
    IMAGE_PATH: "ent-getstarted-sbx/getting-started-github-actions/hello-github-actions"
    REF: ${{ github.head_ref }}
jobs:
    build:
      environment: dev
      env:
        name: dev
      runs-on: ubuntu-latest
      permissions:
        contents: 'write'  # for google auth
        id-token: 'write' # for google auth
        actions: none
        checks: none
        deployments: none
        issues: none
        discussions: none
        packages: none
        pages: none
        pull-requests: none
        repository-projects: none
        security-events: none
        statuses: none
      steps:
      - name: Harden Runner
        uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            auth.docker.io:443
            dl.google.com:443
            europe-west1-docker.pkg.dev:443
            github.com:443
            iamcredentials.googleapis.com:443
            index.crates.io:443
            production.cloudflare.docker.com:443
            raw.githubusercontent.com:443
            registry-1.docker.io:443
            static.rust-lang.org:443
            sts.googleapis.com:443
            crates.io:443
            static.crates.io:443
      - name: "Git checkout"
        uses: "actions/checkout@v4"
        with:
          ref: ${{ env.REF }}
          fetch-depth: 0
          show-progress: false
      - uses: dtolnay/rust-toolchain@stable
      - name: Install musl target
        run: rustup target add x86_64-unknown-linux-musl
      - name: Cache
        uses: Swatinem/rust-cache@v2
      - run: rustup target add x86_64-unknown-linux-musl
      - run: |
          TARGET_CC=x86_64-linux-musl-gcc \
          cargo build --all --release --target=x86_64-unknown-linux-musl
      - name: Prepare Binary
        run: |
          # reduce size
          strip target/x86_64-unknown-linux-musl/release/hello-github-actions
          # move and rename
          mv target/x86_64-unknown-linux-musl/release/hello-github-actions target/release/hello-github-actions-musl
          # make executable
          chmod +x target/release/hello-github-actions-musl
      - name: "Authenticate with Google Cloud"
        id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{env.WORKLOAD_IDENTITY_PROVIDER}}
          service_account: ${{env.SERVICE_ACCOUNT}}
      # SDK
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
      # Docker config
      - name: 'Configure Docker with gcloud auth'
        run: gcloud --quiet auth configure-docker ${{env.DOCKER_URL}}
      # Docker build
      - name: "Docker Build"
        run: |-
          docker build \
            --tag "${{env.DOCKER_URL}}/${{env.IMAGE_PATH}}:latest" \
            --tag "${{env.DOCKER_URL}}/${{env.IMAGE_PATH}}:${{github.sha}}" \
            --tag "${{env.DOCKER_URL}}/${{env.IMAGE_PATH}}:${{env.VERSION}}" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .
      # Docker publish
      - name: Docker Publish
        run: |-
          docker push -a "${{env.DOCKER_URL}}/${{env.IMAGE_PATH}}"
    deploy_dev:
      environment: dev
      outputs:
        commit_hash: ${{ steps.auto-commit-action.outputs.commit_hash }}  # for test
      needs: ["build"]
      runs-on: ubuntu-latest
      permissions:
        contents: 'write'
        id-token: 'none'
        actions: none
        checks: none
        deployments: none
        issues: none
        discussions: none
        packages: none
        pages: none
        pull-requests: none
        repository-projects: none
        security-events: none
        statuses: none
      steps:
        - name: "Git checkout"
          uses: "actions/checkout@v4"
          with:
            ref: ${{ env.REF }}
            fetch-depth: 0
            show-progress: false
        - uses: yokawasa/action-setup-kube-tools@v0.9.2
          with:
            setup-tools: |
              kustomize
            kustomize: '5.2.1'
        - name: "Update Deployment Image Tag"
          working-directory: ".argo/hestekur/overlays/dev"
          run: |
            kustomize edit set image app-image=${{env.DOCKER_URL}}/${{env.IMAGE_PATH}}:${{ env.VERSION }}
        - name: Commit kustomization and tag version
          id: auto-commit-action
          uses: stefanzweifel/git-auto-commit-action@v4
          with:
            branch: main
            commit_message: "ci: Update deployment image tag in dev to ${{ env.VERSION }} [skip ci]"
            file_pattern: .argo/*/overlays/dev/kustomization.yaml
    deploy_test:
        if: needs.deploy_dev.outputs.commit_hash
        environment: tst
        needs: ["build", "deploy_dev"]
        runs-on: ubuntu-latest
        permissions:
          contents: 'write'
          id-token: 'none'
          actions: none
          checks: none
          deployments: none
          issues: none
          discussions: none
          packages: none
          pages: none
          pull-requests: none
          repository-projects: none
          security-events: none
          statuses: none
        outputs:
          commit_hash: ${{ steps.auto-commit-action.outputs.commit_hash }}  # for prod
        steps:
          - run: |
              echo "last commit sha: ${{needs.deploy_dev.outputs.commit_hash}}"
          - name: "Git checkout"
            uses: "actions/checkout@v4"
            with:
              ref: ${{ needs.deploy_dev.outputs.commit_hash }}
              fetch-depth: 0
              show-progress: false
          - uses: yokawasa/action-setup-kube-tools@v0.9.2
            with:
              setup-tools: |
                kustomize
              kustomize: '5.2.1'
          - name: "Update Deployment Image Tag"
            working-directory: ".argo/hestekur/overlays/tst"
            run: |
              kustomize edit set image app-image=${{env.DOCKER_URL}}/${{env.IMAGE_PATH}}:${{ env.VERSION }}
          - name: Commit kustomization and tag version
            id: auto-commit-action
            uses: stefanzweifel/git-auto-commit-action@v4
            with:
              branch: main
              commit_message: "ci: Update deployment image tag in tst to ${{ env.VERSION }} [skip ci]"
              file_pattern: .argo/*/overlays/tst/kustomization.yaml
    deploy_prod:
        if: needs.deploy_test.outputs.commit_hash
        environment: prd
        needs: ["build", "deploy_dev", "deploy_test"]
        runs-on: ubuntu-latest
        permissions:
          contents: 'write'
          id-token: 'none'
          actions: none
          checks: none
          deployments: none
          issues: none
          discussions: none
          packages: none
          pages: none
          pull-requests: none
          repository-projects: none
          security-events: none
          statuses: none
        steps:
          - name: "Git checkout"
            uses: "actions/checkout@v4"
            with:
              ref: ${{ needs.deploy_test.outputs.commit_hash }}
              fetch-depth: 0
              show-progress: false
          - uses: yokawasa/action-setup-kube-tools@v0.9.2
            with:
              setup-tools: |
                kustomize
              kustomize: '5.2.1'
          - name: "Update Deployment Image Tag"
            working-directory: ".argo/hestekur/overlays/prd"
            run: |
              kustomize edit set image app-image=${{env.DOCKER_URL}}/${{env.IMAGE_PATH}}:${{ env.VERSION }}
              # generate kustomization.yaml
              kustomize build .  --enable-helm > hestekur-k8s-prod.yaml
          - name: Commit kustomization and tag version
            uses: stefanzweifel/git-auto-commit-action@v4
            with:
              branch: main
              commit_message: "ci: Update deployment image tag in prd to ${{ env.VERSION }} [skip ci]"
              tagging_message: "${{ env.VERSION }}"  # only final step should tag
              file_pattern: .argo/*/overlays/prd/kustomization.yaml
          - name: Create Release
            uses: softprops/action-gh-release@v1
            with:
              files: |
                .argo/*/overlays/prd/hestekur-k8s-prod.yaml
              tag_name: ${{ env.VERSION }}
              body: |
                Release ${{ env.VERSION }}
              draft: false
              prerelease: false
              fail_on_unmatched_files: true